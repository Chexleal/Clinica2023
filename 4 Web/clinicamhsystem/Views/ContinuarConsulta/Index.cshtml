@model ConsultaContinuarViewModel
@using ClinicaDomain
@using Newtonsoft.Json
@using ClinicaInfrastructure
@{
    ViewData["Title"] = "Continuar Consultas";
}
@section Links{
    <link rel="stylesheet" href="~/css/pages/calendario.css" asp-append-version="true" />
}

<partial name="Partials/_historialTabla.cshtml" />
<partial name="Partials/_modalReceta.cshtml" />

<form id="formCST" method="post" action="@Url.Action("Guardar")">
    <input hidden name="IdConsulta" value="@Model.Consulta.IdConsulta" />
    <div class="card shadow-lg p-3 mb-5">
        <div class="card-header bg-white">
            <h3>@Model.Consulta.PacienteInformacion.Nombre @Model.Consulta.PacienteInformacion.Apellido</h3>
        </div>
        <div class="card-body align-content-center">


            <div class="row mt-4 ">
                <div class="col col-sm col-md col-lg col-xl col-xxl">
                    <label class="fw-bold">Genero: </label> <label>@Model.Consulta.PacienteInformacion.Genero</label>
                </div>
                <div class="col col-sm col-md col-lg col-xl col-xxl">
                    <label class="fw-bold">Edad: </label> <label>@DateManager.GetAge(Model.Consulta.PacienteInformacion.FechaNacimiento) </label>
                </div>
                <div class="col col-sm col-md col-lg col-xl col-xxl">
                    <label class="fw-bold">Alergias: </label> <label>@Model.Consulta.PacienteInformacion.Alergias</label>
                </div>

            </div>
            <div class="row mt-4">

                <div class="col col-sm col-md col-lg col-xl col-xxl">
                    <label class="fw-bold d-inline">Peso: </label> <input class="form-control d-inline" name="Peso" value="@Model.Consulta.Peso" />
                </div>
                <div class="col col-sm col-md col-lg col-xl col-xxl">
                    <label class="fw-bold">Presión Arterial: </label> <input class="form-control" name="PresionArterial" value="@Model.Consulta.PresionArterial">
                </div>
                <div class="col col-sm col-md col-lg col-xl col-xxl">
                    <label class="fw-bold">Temperatura: </label> <input class="form-control" name="Temperatura" value="@Model.Consulta.Temperatura">
                </div>
            </div>
            <div class="row mt-4">
                <div class="col col-sm col-md col-lg col-xl col-xxl">
                    <label class="fw-bold">Antecedentes: </label> <label>@Model.Consulta.PacienteInformacion.Antecedentes</label>
                </div>
                <div class="col col-sm col-md col-lg col-xl col-xxl">
                    <label class="fw-bold">Motivo Consulta: </label> <input class="form-control" name="MotivoConsulta" value="@Model.Consulta.MotivoConsulta">
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow-lg p-3 mb-5 mt-5">
        <div class="card-header bg-white">
            @{
                var consultas = new List<Consulta>(Model.Consulta.PacienteInformacion.Consulta.Where(x=>x.Terminada).ToList());
                // Almacenar el PacienteInformacion de cada objeto de consultas en una lista
                var pacientesInformacion = consultas.Select(c => c.PacienteInformacion).ToList();
                // Asignar null a la propiedad PacienteInformacion de cada objeto de consultas
                consultas.ForEach(c => c.PacienteInformacion = null);
                // Serializar la lista de consultas modificada
                var historiaJson = JsonConvert.SerializeObject(consultas);
                // Asignar el PacienteInformacion correspondiente a cada objeto de consultas
                consultas.Zip(pacientesInformacion, (c, p) => new { Consulta = c, PacienteInformacion = p })
                .ToList()
                .ForEach(cp => cp.Consulta.PacienteInformacion = cp.PacienteInformacion);

            }
            <button type="button" id="btnHistorialConsulta.PacienteInformacion" onclick="ShowHistorialModal(@historiaJson)" class="btn btn-mini" title="Historial Paciente">
                <i class="fa-solid fa-clock-rotate-left fa-bounce fa-xl" style="color: #2d8f77;"></i>
                <p style="color: #2d8f77; font-weight: bold;">Historial</p>
            </button>

            <button type="button" id="btnReceta" onclick="ShowReceta('@Model.Receta.IdReceta')" class="btn btn-mini" title="Receta">
                <i class="fa-solid fa-file-signature fa-bounce fa-xl" style="color: #2d8f77;"></i>
                <p style="color: #2d8f77; font-weight: bold;">Receta</p>
            </button>
            <button type="button" id="btnCalendario" onclick="ShowCalendario('@Model.Consulta.IdPaciente')" class="btn btn-mini" title="Historia">
                <i class="fa-solid fa-calendar fa-bounce fa-xl" style="color: #2d8f77;"></i>
                <p style="color: #2d8f77; font-weight: bold;">Calendario</p>
            </button>
        </div>
        <div class="card-body">
            <div class="row mt-2">
                <div class="col col-sm col-md col-lg col-xl col-xxl">
                    <label class="fw-bold" for="observaciones">Historia clínica: </label>
                    <textarea class="form-control" id="observaciones" name="HistoriaClinica">@Model.Consulta.HistoriaClinica</textarea>
                </div>
            </div>

            <div class="row mt-2">
                <div class="col col-sm col-md col-lg col-xl col-xxl">
                    <label class="fw-bold" for="diagnostico">Diagnóstico: </label>
                    <textarea class="form-control" id="diagnostico" name="Diagnostico">@Model.Consulta.Diagnostico</textarea>
                </div>
            </div>

            <div class="row mt-2">
                <div class="col col-sm col-md col-lg col-xl col-xxl">
                    <label class="fw-bold" for="diagnostico">Observaciones: </label>
                    <textarea class="form-control" id="diagnostico" name="Observaciones">@Model.Consulta.Observaciones</textarea>
                </div>
            </div>

            <div class="row mt-5">
                <div class="col col-sm col-md col-lg col-xl col-xxl">
                    <input hidden id="terminado" name="Terminada" value="@Model.Consulta.IdPaciente" />
                    <input hidden id="fecha" name="fecha" value="@Model.Consulta.Fecha" />
                    @if (!Model.Consulta.Terminada)
                    {
                       @* <button type="submit" id="btnGuardar" class="btn btn-outline-dark mb-3" onclick="guardadoAlert()">Guardar Cambios</button>*@
                        <button type="submit" class="btn btn-outline-dark mb-3" onclick="guardadoAlert(event)">Guardar Cambios</button>
                        @*<button type="submit" id="btnTerminar" class="btn btn-dark mb-3">Terminar Consulta</button>*@
                        <button type="submit" class="btn btn-dark mb-3" onclick="alertTerminarConsulta(event)">Terminar Consulta</button>
                    }
                </div>
            </div>
        </div>

    </div>
</form>

<div class="modal fade" id="modalCalendario" tabindex="-1" role="dialog" aria-labelledby="modalCalendario" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" style="height:100%; width:100%;">
            </div>
        </div>
    </div>
</div>







@section Scripts{
    <script src="~/js/pages/continuar-consultas.js" asp-append-version="true"></script>
    <script>

        function alertTerminarConsulta(e) {
            e.preventDefault();
            Swal.fire({
                title: '¿Esta seguro de terminar esta consulta?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Si',
                cancelButtonText: 'No'
            }).then((resultado) => {

                if (resultado.isConfirmed) {
                    const formulario = document.getElementById('formCST');
                    formulario.submit();
                }

            })
        }

        function guardadoAlert(e) {
            e.preventDefault();
            Swal.fire({
                icon: 'success',
                title: 'Cambios guardados',
                showConfirmButton: false,
                timer: 1500
            }).then((result)=>{
                if (result.dismiss === Swal.DismissReason.timer) {
                    const formulario = document.getElementById('formCST');
                    formulario.submit();
                }
            })
        }

        var state = "@Model.Consulta.Terminada";

        var urlReceta="@Url.Action("DescargarPdf","ContinuarConsulta")?consultaId=";
        var urlGetMedicamentos = "@Url.Action("GetMedicamentos","ContinuarConsulta")";
        var urlSaveReceta = "@Url.Action("GuardarReceta","ContinuarConsulta")";
        if(state=='True'){
           
            SetReadOnly();
        }
       

    </script>
}